// TODO: move to external file to demonstrate includes



// Actual content in this
label="My example diagram";

// Define node-types
node Interface {
    label="<Interface>";
    shape=diamond;
    fgcolor=#666666;
    bgcolor=#ffddaa;
}

node Module {
    label="[Module]";
    shape=box;
    fgcolor=#000000;
    bgcolor=#ffffff;
}

// Define edge-/relationship-types
edge implements {
    label="Implements";
    edge_style=dashed;
    target_symbol=arrow_open;
}

edge depends_on; // rely on defaults

edge relates_to {
    source_symbol=arrow_open;
    target_symbol=arrow_open;
}

// Declare the module-instances, optionally grouped
IIterator: Interface {
    note="You can add notes to instances";
};

group Core {
    note="You can add notes to groups";
    label="Core";

    MySomething: Module;
    MyElse: Module;
}

SomeDependency: Module {
    // An instantiation can override base-node fields
    bgcolor="#ffdddd";
}

// Describe relationships between modules
MySomething implements IIterator;
MySomething depends_on SomeDependency;
MySomething relates_to MyElse {
    // A relationship can override base-edge fields
    target_symbol=arrow_filled;
}
